pipeline {
    agent { label "OneS" }
    environment {
        allureReportUrl = "${env.JENKINS_URL}job/${env.JOB_NAME.replaceAll('/', '/job/')}/${env.BUILD_NUMBER}/allure"
        allureResultsDir = "${env.WORKSPACE.replace('\\', '\\\\')}\\\\results"
        VRUNNER_PATH = 'vrunner'
    }
    stages {
        stage("Инициализация параметров"){
            steps{
                script{
                    if (params.Product.contains('fitnesscorp')) {
                        //
					}else if (params.Product.contains('fitness')) {
                        //
					}else if (params.Product.contains('spasalon')) {
                        //
					}else if (params.Product.contains('salon')) {
                        //
					}else if (params.Product.contains('stoma')) {
                        env.varepositoryUser = "VATest"                                                     // Пользователь хранилища 
                        env.collectedReleaseP = "D:\\release_build\\STOMA\\Collected_release\\Polnaya"      // Полная поствка
                        env.collectedReleaseOb = "D:\\release_build\\STOMA\\Collected_release\\obnovlenine" // Поставка обновления
                        env.target_path = "D:\\release_build\\STOMA\\Stomatology"                           // Путь к файлам документации
                        env.oldCF = "D:\\release_build\\STOMA\\Old_versions_cf"                             // Старые cf 
                        env.fbrb = "D:\\release_build\\STOMA\\files_before_release_build"                   // Все необходимые файлы для сборки релиза
                        env.sbor = "D:\\release_build\\STOMA\\Sbor"                                         // Путь где собирается релиз
                        env.releaseServer = "VAStoma"                                                       // Имя базы релизного хранилища
                        env.releaseUser = "Админ"                                                           // Пользователь релизного хранилища
                        env.baseBuild = "localhost/StomaSborka"                                             // База на которой проходит сборка
                        env.buildUser = "Николаев Лев (Полные права)"                                       // Пользователь базы сборки
                        env.netlenka = "D:\\release_build\\Netlenka1c"                                      // Путь к нетленки - шифрование расширения
                        env.sourceDirectory = "C:\\automation\\sample\\Stomatology"                         // Путь к файлам шаблонам
                    def messageStart = 'Запущен процесс сборки «1С: Стоматологическая клиника 2.0»'         // Отпарвка сообщение в телеграмм о запуске сборки 
                    def response = httpRequest(url: "https://api.telegram.org/bot${env.botToken}/sendMessage?chat_id=${env.chatId}&text=${URLEncoder.encode(messageStart, 'UTF-8')}")
                    }
                }
            }
        }
        stage('Обновление документации') {
            steps {
                script {
                    def scriptPath = 'SBORKA/records/delete_folders_and_files.py'
                    def scriptPath1 = 'SBORKA/records/update_files_and_contents.py'
                    def scriptPath2 = 'SBORKA/records/process_files.py'
                    bat "python ${scriptPath} ${env.target_path}"
                    bat "python ${scriptPath1} ${env.sourceDirectory} ${env.target_path} ${params.oldversion_1} ${params.newversion_1} ${params.platformversion_1} ${params.slkversion} ${env.sbor}"
                    bat "python ${scriptPath2} ${params.oldversion_1} ${params.newversion_1}"
                }
            }
        }

        stage("Обновление конфигурации из релизного хранилища") {
            steps{
                script {
					bat """
					chcp 65001
					@call ${VRUNNER_PATH} session kill --with-nolock --db ${env.releaseServer} --db-user ${env.releaseUser}
					@call ${VRUNNER_PATH} loadrepo --storage-name ${env.repositoryReleaseStom} --storage-user ${env.varepositoryUser} --ibconnection /Slocalhost/${env.releaseServer} --db-user ${env.releaseUser}
					@call ${VRUNNER_PATH} updatedb --ibconnection /Slocalhost/${env.releaseServer} --db-user ${env.releaseUser}
                    """
                }
            }
        }
        stage("Обновление мессенджера из хранилища") {
            steps{  
                script {
                    bat """
                    chcp 65001
                    @call ${VRUNNER_PATH} loadrepo --storage-name http://192.168.2.16/hran1c/repository.1ccr/stomatology2_messenger_release --storage-user МихаилБ --extension Мессенджер_Стоматология --ibconnection /Slocalhost/${env.releaseServer} --db-user ${env.releaseUser}
                    @call ${VRUNNER_PATH} updateext Мессенджер_Стоматология --ibconnection /Slocalhost/${env.releaseServer} --db-user ${env.releaseUser}
                    """
                }
            }
        }
        stage("Обновление журнала записи из хранилища") {
            steps{
                script {
                    bat """
                    chcp 65001
                    @call ${VRUNNER_PATH} loadrepo --storage-name http://192.168.2.16/hran1c/repository.1ccr/stomatology2_shedule --storage-user МихаилБ --extension ЖурналЗаписи_Стоматология --ibconnection /Slocalhost/${env.releaseServer} --db-user ${env.releaseUser}
                    @call ${VRUNNER_PATH} updateext ЖурналЗаписи_Стоматология --ibconnection /Slocalhost/${env.releaseServer} --db-user ${env.releaseUser}
                    """
                }
            }
        }
        stage("Выгрузка конфигураций и расширений из хранилища") {
            steps{
                script {
                    bat """
                    chcp 65001
                    @call ${VRUNNER_PATH} unload ${env.fbrb}\\1Cv8.cf --ibconnection /Slocalhost/${env.releaseServer} --db-user ${env.releaseUser}
                    @call ${VRUNNER_PATH} unloadext ${env.fbrb}\\messenger.cfe Мессенджер_Стоматология --ibconnection /Slocalhost/${env.releaseServer} --db-user ${env.releaseUser}
                    @call ${VRUNNER_PATH} unloadext ${env.fbrb}\\jurnal.cfe ЖурналЗаписи_Стоматология --ibconnection /Slocalhost/${env.releaseServer} --db-user ${env.releaseUser}
                    """
                }
            }
        }
        stage('Шифрование расширения') {
            steps {
                script{
                    bat """
                    start ${env.netlenka}\\Netlenka1C.exe --mode=prof --source ${env.fbrb}\\jurnal.cfe --createpdb
                    exit
                    """
                }
            }
        }
        stage('Загрузка .cf в базу для сборки релиза') {
            steps {
                script {
                    bat """
                    chcp 65001
                    @call ${VRUNNER_PATH} load --src ${env.fbrb}\\1Cv8.cf --ibconnection /S${env.baseBuild} --db-user "${env.buildUser}"
                    @call ${VRUNNER_PATH} updatedb --ibconnection /S${env.baseBuild} --db-user "${env.buildUser}"
                    """
                }
            }
        }
        stage("Обновление базы в режиме 1С:Предприятие") {
            steps {
                script{
                    bat """
                    chcp 65001
                    @call ${VRUNNER_PATH}  run --command ЗавершитьРаботуСистемы; --ibconnection /S${env.baseBuild} --db-user "${env.buildUser}" --execute "${env.epfvrunner}\\ЗакрытьПредприятие.epf"
                    """
                }
            }
        }
        stage('Пауза') {
            steps {
               script{
                    def messageText = """Сборка приостановлена. Необходимо создать внешнюю обработку, удалить Helix и fresh, выгрузить идентификатор"""
                    def response = httpRequest(url: "https://api.telegram.org/bot${env.botToken}/sendMessage?chat_id=${env.chatId}&text=${URLEncoder.encode(messageText, 'UTF-8')}")
                    // Вручную запрашиваем продолжение пайплайна
                    input 'Продолжить выполнение пайплайна?'
                }
            }
        }
        stage("Загрузка расширений и СЛК") {
                steps {
                    script {
                    // Загружает мессенджер в макет 'РасширениеМессенджера'
                    bat """
                    echo off
                    chcp 65001 >nul
                    set SourceFile=${env.fbrb}\\messenger.cfe
                    set TemplateName=РасширениеМессенджера
                    if not exist %SourceFile% (
                        echo Исходный файл "%SourceFile%" не найден!
                        goto Error
                    )
                    echo Путь к информационной базе: %${env.baseBuild}%
                    echo Исходный файл: %SourceFile%
                    echo Целевой шаблон: %TemplateName%
                    for /f "delims=" %%i in ('dir /b /s /a:d /O:-D "%ProgramFiles%\\1cv8\\8.3.*"') do (
                        set Designer="%%i\\bin\\1cv8.exe"
                        if exist "%%i\\bin\\1cv8.exe" goto Found
                    )
                    echo "1C:Enterprise не найден, невозможно обновить шаблон..."
                    goto Error
                    :Found
                    echo Найдена 1C:Enterprise: %Designer%
                    echo.
                    set TempDir=%TEMP%\\template.upd
                    if exist "%TempDir%" (rmdir /s /q "%TempDir%" >nul)
                    mkdir "%TempDir%"
                    if "%CheckTemplate%" == "" goto CopySource
                    echo Проверка шаблона...
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /DumpConfigFiles"%TempDir%" -Template
                    if errorlevel 1 goto Error

                    if not exist "%TempDir%\\ОбщийМакет.%TemplateName%.Макет.bin" (
                        echo Ошибка: Общий шаблон "%TemplateName%" не найден в информационной базе "%${env.baseBuild}%"
                        goto Error
                    )
                    if exist "%TempDir%"\\* (rmdir /s /q "%TempDir%" >nul)
                    mkdir "%TempDir%"
                    :CopySource
                    copy "%SourceFile%" "%TempDir%\\ОбщийМакет.%TemplateName%.Макет.bin" >nul
                    echo Загрузка шаблона...
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /N"${env.buildUser}" /LoadConfigFiles"%TempDir%" -Template /UpdateDBCfg
                    if errorlevel 1 goto Error
                    :Success
                    echo Операция выполнена успешно
                    goto End
                    :Error
                    echo Ошибка (%Errorlevel%), операция прервана
                    set errorlevel=1
                    :End
                    chcp 866 >nul
                    if exist "%TempDir%" (rmdir %TempDir% /S /Q >nul)
                    echo.
                    """
                    // Загружает мессенджер в макет РасширениеЖурналаЗаписи
                    bat """
                    echo off

                    rem Устанавливаем кодировку для корректного отображения русских символов
                    chcp 65001 >nul

                    rem Задаем переменные: имя исходного файла, путь к информационной базе и имя шаблона
                    set SourceFile=${env.fbrb}\\Protected\\jurnal.cfe
                    set TemplateName=РасширениеЖурналаЗаписи

                    rem Проверяем существование исходного файла
                    if not exist %SourceFile% (
                        echo Исходный файл "%SourceFile%" не найден!
                        goto Error
                    )

                    echo Путь к информационной базе: %${env.baseBuild}%
                    echo Исходный файл: %SourceFile%
                    echo Целевой шаблон: %TemplateName%

                    rem Ищем установленную версию 1C:Enterprise
                    for /f "delims=" %%i in ('dir /b /s /a:d /O:-D "%ProgramFiles%\\1cv8\\8.3.*"') do (
                        set Designer="%%i\\bin\\1cv8.exe"
                        if exist "%%i\\bin\\1cv8.exe" goto Found
                    )

                    rem Если 1C:Enterprise не найден, выводим сообщение об ошибке
                    echo "1C:Enterprise не найден, невозможно обновить шаблон..."
                    goto Error
                    :Found
                    echo Найдена 1C:Enterprise: %Designer%
                    echo.
                    rem Создаем временную директорию для хранения промежуточных файлов
                    set TempDir=%TEMP%\\template.upd
                    if exist "%TempDir%" (rmdir /s /q "%TempDir%" >nul)
                    mkdir "%TempDir%"
                    rem Если переменная CheckTemplate пустая, переходим к копированию исходного файла
                    if "%CheckTemplate%" == "" goto CopySource
                    rem Проверяем наличие шаблона в информационной базе
                    echo Проверка шаблона...
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /DumpConfigFiles"%TempDir%" -Template
                    if errorlevel 1 goto Error
                    rem Если общий шаблон не найден, выводим сообщение об ошибке
                    if not exist "%TempDir%\\ОбщийМакет.%TemplateName%.Макет.bin" (
                        echo Ошибка: Общий шаблон "%TemplateName%" не найден в информационной базе "%${env.baseBuild}%"
                        goto Error
                    )
                    if exist "%TempDir%"\\* (rmdir /s /q "%TempDir%" >nul)
                    mkdir "%TempDir%"
                    :CopySource
                    rem Копируем исходный файл в временную директорию
                    copy "%SourceFile%" "%TempDir%\\ОбщийМакет.%TemplateName%.Макет.bin" >nul
                    rem Загружаем шаблон в информационную базу и обновляем конфигурацию
                    echo Загрузка шаблона...
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /N"${env.buildUser}" /LoadConfigFiles"%TempDir%" -Template /UpdateDBCfg
                    if errorlevel 1 goto Error
                    :Success
                    echo Операция выполнена успешно
                    goto End
                    :Error
                    echo Ошибка (%Errorlevel%), операция прервана
                    set errorlevel=1
                    :End
                    rem Восстанавливаем кодировку и удаляем временную директорию
                    chcp 866 >nul
                    if exist "%TempDir%" (rmdir %TempDir% /S /Q >nul)
                    echo.
                    """

                    // Загрузка компаненты СЛК в макет 'КомпонентаСЛК'
                    bat """
                    @echo off
                    rem Устанавливаем кодировку для корректного отображения русских символов
                    chcp 65001 >nul

                    rem Задаем переменные: имя исходного файла, путь к информационной базе и имя шаблона
                    set SourceFile=${env.fbrb}\\licenceaddin-${params.slkversion}-template.zip
                    set TemplateName=КомпонентаСЛК

                    rem Проверяем существование исходного файла
                    if not exist %SourceFile% (
                        echo Исходный файл "%SourceFile%" не найден!
                        goto Error
                    )

                    echo Путь к информационной базе: %${env.baseBuild}%
                    echo Исходный файл: %SourceFile%
                    echo Целевой шаблон: %TemplateName%

                    rem Ищем установленную версию 1C:Enterprise
                    for /f "delims=" %%i in ('dir /b /s /a:d /O:-D "%ProgramFiles%\\1cv8\\8.3.*"') do (
                        set Designer="%%i\\bin\\1cv8.exe"
                        if exist "%%i\\bin\\1cv8.exe" goto Found
                    )

                    rem Если 1C:Enterprise не найден, выводим сообщение об ошибке
                    echo "1C:Enterprise не найден, невозможно обновить шаблон..."
                    goto Error

                    :Found
                    echo Найдена 1C:Enterprise: %Designer%
                    echo.

                    rem Создаем временную директорию для хранения промежуточных файлов
                    set TempDir=%TEMP%\\template.upd
                    if exist "%TempDir%" (rmdir /s /q "%TempDir%" >nul)
                    mkdir "%TempDir%"

                    rem Если переменная CheckTemplate пустая, переходим к копированию исходного файла
                    if "%CheckTemplate%" == "" goto CopySource

                    rem Проверяем наличие шаблона в информационной базе
                    echo Проверка шаблона...
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /DumpConfigFiles"%TempDir%" -Template
                    if errorlevel 1 goto Error

                    rem Если общий шаблон не найден, выводим сообщение об ошибке
                    if not exist "%TempDir%\\ОбщийМакет.%TemplateName%.Макет.bin" (
                        echo Ошибка: Общий шаблон "%TemplateName%" не найден в информационной базе "%${env.baseBuild}%"
                        goto Error
                    )
                    if exist "%TempDir%"\\* (rmdir /s /q "%TempDir%" >nul)
                    mkdir "%TempDir%"

                    :CopySource
                    rem Копируем исходный файл в временную директорию
                    copy "%SourceFile%" "%TempDir%\\ОбщийМакет.%TemplateName%.Макет.bin" >nul

                    rem Загружаем шаблон в информационную базу и обновляем конфигурацию
                    echo Загрузка шаблона...
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /N"${env.buildUser}"  /LoadConfigFiles"%TempDir%" -Template /UpdateDBCfg
                    if errorlevel 1 goto Error
                    :Success
                    echo Операция выполнена успешно
                    goto End
                    :Error
                    echo Ошибка (%Errorlevel%), операция прервана
                    set errorlevel=1
                    :End
                    rem Восстанавливаем кодировку и удаляем временную директорию
                    chcp 866 >nul
                    if exist "%TempDir%" (rmdir %TempDir% /S /Q >nul)
                    echo.
                    """

                    // Создание файла .datafile
                    bat """
                    chcp 65001
                    rem Путь к папке с licenceedit.exe
                    cd /d "${env.fbrb}"
                    @echo off
                    rem Change to your serie ID
                    set Serie=4FB1
                    echo.
                    licenceedit.exe c %Serie%.datafile "Helix.epf" -y --serie=%Serie%
                    rem echo.
                    rem echo ExitCode: %errorlevel%
                    if errorlevel 1 goto Error
                    :Success
                    echo.
                    echo Success, press any key to quit...
                    goto End
                    :Error
                    echo.
                    echo Error (%errorlevel%), press any key to quit...
                    :End
                    """

                    // Загрузка .datafile в макет 'ОбъектыСЛК'
                    bat """
                    @echo off
                    rem Устанавливаем кодировку для корректного отображения русских символов
                    chcp 65001 >nul

                    rem Задаем переменные: имя исходного файла, путь к информационной базе и имя шаблона
                    set SourceFile=${env.fbrb}\\4FB1.datafile
                    set TemplateName=ОбъектыСЛК

                    rem Проверяем существование исходного файла
                    if not exist %SourceFile% (
                        echo Исходный файл "%SourceFile%" не найден!
                        goto Error
                    )

                    echo Путь к информационной базе: %${env.baseBuild}%
                    echo Исходный файл: %SourceFile%
                    echo Целевой шаблон: %TemplateName%

                    rem Ищем установленную версию 1C:Enterprise
                    for /f "delims=" %%i in ('dir /b /s /a:d /O:-D "%ProgramFiles%\\1cv8\\8.3.*"') do (
                        set Designer="%%i\\bin\\1cv8.exe"
                        if exist "%%i\\bin\\1cv8.exe" goto Found
                    )

                    rem Если 1C:Enterprise не найден, выводим сообщение об ошибке
                    echo "1C:Enterprise не найден, невозможно обновить шаблон..."
                    goto Error

                    :Found
                    echo Найдена 1C:Enterprise: %Designer%
                    echo.

                    rem Создаем временную директорию для хранения промежуточных файлов
                    set TempDir=%TEMP%\\template.upd
                    if exist "%TempDir%" (rmdir /s /q "%TempDir%" >nul)
                    mkdir "%TempDir%"

                    rem Если переменная CheckTemplate пустая, переходим к копированию исходного файла
                    if "%CheckTemplate%" == "" goto CopySource

                    rem Проверяем наличие шаблона в информационной базе
                    echo Проверка шаблона...
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /DumpConfigFiles"%TempDir%" -Template
                    if errorlevel 1 goto Error

                    rem Если общий шаблон не найден, выводим сообщение об ошибке
                    if not exist "%TempDir%\\ОбщийМакет.%TemplateName%.Макет.bin" (
                        echo Ошибка: Общий шаблон "%TemplateName%" не найден в информационной базе "%${env.baseBuild}%"
                        goto Error
                    )
                    if exist "%TempDir%"\\* (rmdir /s /q "%TempDir%" >nul)
                    mkdir "%TempDir%"

                    :CopySource
                    rem Копируем исходный файл в временную директорию
                    copy "%SourceFile%" "%TempDir%\\ОбщийМакет.%TemplateName%.Макет.bin" >nul

                    rem Загружаем шаблон в информационную базу и обновляем конфигурацию
                    echo Загрузка шаблона...
                    "${env.platformPath}" CONFIG /S"${env.baseBuild}" /N"${env.buildUser}" /LoadConfigFiles"%TempDir%" -Template /UpdateDBCfg
                    if errorlevel 1 goto Error

                    :Success
                    echo Операция выполнена успешно
                    goto End

                    :Error
                    echo Ошибка (%Errorlevel%), операция прервана
                    set errorlevel=1

                    :End
                    rem Восстанавливаем кодировку и удаляем временную директорию
                    chcp 866 >nul
                    if exist "%TempDir%" (rmdir %TempDir% /S /Q >nul)
                    echo.
                    """
                    // Создание файла 4FB1.zip
                    def zip = 'SBORKA/STOMA/zip.py'
                    bat "python ${zip} ${env.fbrb} ${env.target_path}"
                }
            }
        }
        stage('Основная поставка') {
            steps {
                script {
                    bat """
                    chcp 65001
                    @call ${VRUNNER_PATH} session kill --with-nolock --db StomaSborka --db-user "${env.buildUser}"
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /N"${env.buildUser}" /CreateDistributivePackage"${env.collectedReleaseP}" -File"${env.fbrb}\\1С_Медицина_21_Внутренний_КомплектПоставки.edf" -PackageFileName setup.zip -Option"Основная поставка"
                    """
                    // Разархивирование
                    def unzipping = 'SBORKA/STOMA/unzipping.py'
                    bat "python ${unzipping} ${env.collectedReleaseP}"

                    // Установка //
                    def install = 'SBORKA/STOMA/install.py'
                    bat "python ${install} ${env.collectedReleaseP}"
                }
            }
        }
        stage("Выгрзка файла .cfu") {
            steps {
                script{
                    bat """
                    chcp 65001
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /N"${env.buildUser}" /CreateDistributionFiles -cfufile ${env.sbor}\\Update\\1Cv8.cfu -f ${env.oldCF}\\${oldversion_1}.cf
                    """
                }
            }
        }
        stage('Поставка обновления') {
            steps {
                script {
                    bat """
                    chcp 65001
                    "${env.platformPath}" DESIGNER /S"${env.baseBuild}" /N"${env.buildUser}" /CreateDistributivePackage"${env.collectedReleaseOb}" -File"${env.fbrb}\\Файл описания комплекта поставки.edf" -PackageFileName update.zip -Option"Поставка обновления"
                    """

                    // Разархивирование
                    def unzippingupdate = 'SBORKA/STOMA/unzippingupdate.py'
                    bat "python ${unzippingupdate} ${env.collectedReleaseOb}"

                     // Установка
                    def installupdate = 'SBORKA/STOMA/installupdate.py'
                    bat "python ${installupdate} ${env.collectedReleaseOb}"
                }
            }
        }
        stage('Создание архива дистрибутива') {
            steps {
                script {
                    def perenos = 'SBORKA/STOMA/Perenos.py'
                    bat "python ${perenos} ${newversion_1} ${env.target_path} ${env.collectedReleaseP} ${env.oldCF} ${env.collectedReleaseOb} ${env.fbrb}"

                    // Отправка сообщения в Telegram
                    def messagefinish = 'Сборка «1С: Стоматологическая клиника 2.0» успешно завершена.'
                    def response = httpRequest(url: "https://api.telegram.org/bot${botToken}/sendMessage?chat_id=${chatId}&text=${URLEncoder.encode(messagefinish, 'UTF-8')}"
                    )
                }
            }
        }
        stage{
            steps{
                script{
                    // удаление и очистка за собой
                }
            }
        }
    }
}